apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "io.spring.dependency-management"

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${theSpringBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:0.6.0.RELEASE"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url "http://repo.spring.io/release" }
}

    subprojects {
        apply plugin: "io.spring.dependency-management"
        apply plugin: 'java'

        sourceCompatibility = theSourceCompatibility
        targetCompatibility = theSourceCompatibility

        tasks.withType(JavaCompile) {
            options.incremental = true
        }

        dependencyManagement {
            imports {
                mavenBom("org.springframework.boot:spring-boot-dependencies:${theSpringBootVersion}")
                mavenBom "org.springframework.cloud:spring-cloud-netflix:${theSpringCloudNetflixVersion}"
                mavenBom "io.spring.platform:platform-bom:${theSpringPlatformBomVersion}"
            }
        }

        repositories {
            mavenLocal()
            mavenCentral()
            jcenter()
            maven { url "http://repo.spring.io/release" }
        }
    }

    allprojects {
        apply plugin: "java"
        apply plugin: 'eclipse'
        apply plugin: 'idea'

        version = theVersion
        group = theGroup
    }


task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}


task runEureka(type: Exec) {

    doFirst {
        println "Starting Eureka Server"
        File workingDir = new File(project.projectDir, "artifacts")
        println "RUNNING  Eureka IN  workingDir : ${workingDir}"

        commandLine   "java", "-jar", "${workingDir}/e-server.jar"
    }
}


task runMicro(type: Exec) {

    doFirst {
        println "Starting MicroService"
        File workingDir = new File(project.projectDir, "artifacts")
        println "RUNNING  MicroService IN  workingDir : ${workingDir}"

        commandLine   "java", "-jar", "${workingDir}/s-micro.jar"
    }
}


task runMicroServer(type: Exec) {

    doFirst {
        println "Starting Micro Server"
        File workingDir = new File(project.projectDir, "artifacts")
        println "RUNNING  Micro Server  IN  workingDir : ${workingDir}"

        commandLine   "java", "-jar", "${workingDir}/s-micro-srv.jar"
    }
}

task runCBreaker(type: Exec) {

    doFirst {
        println "Starting Circuit Breaker"
        File workingDir = new File(project.projectDir, "artifacts")
        println "RUNNING  Circuit Breaker  IN  workingDir : ${workingDir}"

        commandLine   "java", "-jar", "${workingDir}/s-hystrix.jar"
    }
}

task runClient(type: Exec) {

    doFirst {
        println "Starting Rest Client"
        File workingDir = new File(project.projectDir, "artifacts")
        println "RUNNING  Rest Client  IN  workingDir : ${workingDir}"

        commandLine   "java", "-jar", "${workingDir}/s-micro-client.jar"
    }
}



